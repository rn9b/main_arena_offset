#!/usr/bin/env bash
# set -eux

blue='\033[0;34m'
light_green='\033[1;32m'
default_color='\033[00m'
red_bold='\033[01;31m'
endc='\033[0m' 

slogan_color=$light_green
result_color=$red_bold

function print_info()
{
	printf "[$blue+$default_color]$slogan_color libc version :$endc$result_color %s$endc\n" "$1"
	printf "[$blue+$default_color]$slogan_color build ID :$endc$result_color %s$endc\n" "$2"
	printf "[$blue+$default_color]$slogan_color main_arena_offset :$endc$result_color 0x%x$endc\n" $3
	exit
}

function get_offset()
{
	libc=$1
	# deal with local libc(in case of symbolic link)
	if [[ $(file $libc) =~ "symbolic link" ]]
	then
		libc=$(dirname $libc)"/"$(readlink $libc)
	fi

	# libc version
	libc_version=$(strings $libc | grep "glibc 2"| head -n 1)

	# buildID
	buildID=$(file $libc| grep -o "BuildID\[sha1\]=[a-f0-9]\{40,\}")

	# __malloc_hook
	malloc_hook=$(objdump -T $libc|grep __malloc_hook |cut -d" " -f 1)
	let malloc_hook=16#$malloc_hook

	# 32-bit
	if [[ $(file $libc) =~ "32-bit" ]]
	then
		let main_arena=($malloc_hook+0x18)
		print_info "$libc_version" "$buildID" $main_arena
	fi
	
	# 64-bit
	realloc_hook=$(objdump -T $libc|grep __realloc_hook |cut -d" " -f 1)
	let realloc_hook=16#$realloc_hook
	((offset=$malloc_hook-$realloc_hook))
	
	let main_arena=($malloc_hook+$offset*2)
	print_info "$libc_version" "$buildID" $main_arena
}

get_offset $1
